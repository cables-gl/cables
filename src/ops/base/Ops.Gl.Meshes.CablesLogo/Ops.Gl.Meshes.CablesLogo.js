const
    render = op.inTrigger("render"),
    scale = op.inValue("Scale", 1),
    draw = op.inBool("Draw", true),
    trigger = op.outTrigger("trigger"),
    geomOut = op.outObject("Geometry");

const verts = [14.4166, 163.754, 0, 18.4809, 210.763, 0, 54.9491, 204.346, 0, 42.7849, 158.762, 0, 22.5453, 257.772, 0, 67.1133, 249.93, 0, 109.532, 234.597, 0, 89.7001, 191.777, 0, 69.8685, 148.956, 0, 121.577, 173.384, 0, 94.8187, 134.563, 0, 148.336, 212.204, 0, 185.332, 186.28, 0, 150.011, 149.481, 0, 116.915, 116.086, 0, 174.431, 120.383, 0, 135.438, 94.0268, 0, 213.424, 146.739, 0, 241.515, 107.197, 0, 193.515, 87.7918, 0, 149.882, 69.1061, 0, 205.939, 53.4095, 0, 159.743, 42.0425, 0, 252.134, 64.7765, 0, 259.112, 21.5601, 0, 211.953, 17.6223, 0, 164.793, 13.6845, 0, 211.807, -19.1835, 0, 164.803, -15.1197, 0, 258.81, -23.2474, 0, 251.027, -67.8259, 0, 205.438, -55.6602, 0, 159.849, -43.4946, 0, 192.786, -90.46, 0, 150.007, -70.5651, 0, 235.565, -110.355, 0, 213.005, -149.583, 0, 174.326, -122.559, 0, 135.648, -95.5346, 0, 150.535, -150.933, 0, 117.14, -117.606, 0, 183.929, -184.259, 0, 149.313, -213.406, 0, 122.21, -174.782, 0, 95.1064, -136.159, 0, 90.1486, -193.307, 0, 70.1663, -150.569, 0, 110.131, -236.046, 0, 67.6335, -251.595, 0, 55.3747, -206.031, 0, 43.116, -160.467, 0, 18.9111, -212.474, 0, 14.7512, -165.479, 0, 23.071, -259.469, 0, -22.1816, -259.545, 0, -18.1173, -212.536, 0, -14.0529, -165.527, 0, -54.5854, -206.119, 0, -42.4212, -160.536, 0, -66.7496, -251.703, 0, -108.973, -236.672, 0, -89.239, -193.701, 0, -69.5049, -150.73, 0, -120.824, -175.76, 0, -94.4551, -136.336, 0, -147.193, -215.185, 0, -183.41, -190.469, 0, -148.964, -152.339, 0, -116.552, -117.859, 0, -173.286, -123.476, 0, -135.074, -95.8, 0, -211.498, -151.152, 0, -239.586, -111.835, 0, -192.467, -90.79, 0, -149.518, -70.8793, 0, -205.184, -55.8988, 0, -159.38, -43.8157, 0, -250.988, -67.9818, 0, -258.553, -23.6913, 0, -211.491, -19.5745, 0, -164.429, -15.4577, 0, -211.443, 17.4104, 0, -164.439, 13.3465, 0, -258.446, 21.4742, 0, -250.664, 66.0527, 0, -205.075, 53.8871, 0, -159.486, 41.7214, 0, -192.423, 88.6869, 0, -149.644, 68.7919, 0, -235.201, 108.582, 0, -212.641, 147.81, 0, -173.962, 120.786, 0, -135.284, 93.7614, 0, -150.171, 149.16, 0, -116.777, 115.833, 0, -183.566, 182.486, 0, -148.949, 211.632, 0, -121.846, 173.009, 0, -94.7427, 134.385, 0, -89.7849, 191.534, 0, -69.8026, 148.796, 0, -109.767, 234.272, 0, -67.2698, 249.822, 0, -55.011, 204.258, 0, -42.7523, 158.694, 0, -18.5474, 210.7, 0, -14.3875, 163.705, 0, -22.7074, 257.695, 0, 22.5453, 257.772, 0, 18.4809, 210.763, 0, 14.4166, 163.754, 0, 256.822, 264.163, 0, 296.476, 236.296, 0, 276.952, 212.586, 0, 276.952, 212.586, 0, 240.805, 244.919, 0, 256.822, 264.163, 0, 336.13, 208.429, 0, 313.099, 180.253, 0, 276.952, 212.586, 0, 276.952, 212.586, 0, 296.476, 236.296, 0, 336.13, 208.429, 0, 288.309, 152.686, 0, 255.898, 189.327, 0, 313.099, 180.253, 0, 223.486, 225.968, 0, 240.805, 244.919, 0, 285.635, 306.513, 0, 328.243, 283.496, 0, 313.087, 259.335, 0, 313.087, 259.335, 0, 271.643, 284.706, 0, 285.635, 306.513, 0, 370.852, 260.478, 0, 354.53, 233.964, 0, 313.087, 259.335, 0, 313.087, 259.335, 0, 328.243, 283.496, 0, 370.852, 260.478, 0, 336.13, 208.429, 0, 296.476, 236.296, 0, 354.53, 233.964, 0, 336.13, 208.429, 0, 256.822, 264.163, 0, 271.643, 284.706, 0, 296.476, 236.296, 0, 256.822, 264.163, 0, 311.134, 352.806, 0, 357.268, 338.992, 0, 343.405, 310.57, 0, 343.405, 310.57, 0, 299.162, 329.55, 0, 311.134, 352.806, 0, 403.403, 325.177, 0, 387.649, 291.589, 0, 343.405, 310.57, 0, 343.405, 310.57, 0, 357.268, 338.992, 0, 403.403, 325.177, 0, 370.852, 260.478, 0, 328.243, 283.496, 0, 387.649, 291.589, 0, 370.852, 260.478, 0, 285.635, 306.513, 0, 299.162, 329.55, 0, 328.243, 283.496, 0, 285.635, 306.513, 0, 328.173, 398.813, 0, 377.479, 395.259, 0, 368.527, 367.195, 0, 368.527, 367.195, 0, 320.46, 375.27, 0, 328.173, 398.813, 0, 426.784, 391.705, 0, 416.594, 359.12, 0, 368.527, 367.195, 0, 368.527, 367.195, 0, 377.479, 395.259, 0, 426.784, 391.705, 0, 403.403, 325.177, 0, 357.268, 338.992, 0, 416.594, 359.12, 0, 403.403, 325.177, 0, 311.134, 352.806, 0, 320.46, 375.27, 0, 357.268, 338.992, 0, 311.134, 352.806, 0, 341.169, 453.101, 0, 389.523, 451.215, 0, 384.421, 423.263, 0, 384.421, 423.263, 0, 335.304, 425.309, 0, 341.169, 453.101, 0, 437.877, 449.328, 0, 433.538, 421.218, 0, 384.421, 423.263, 0, 384.421, 423.263, 0, 389.523, 451.215, 0, 437.877, 449.328, 0, 426.784, 391.705, 0, 377.479, 395.259, 0, 433.538, 421.218, 0, 426.784, 391.705, 0, 328.173, 398.813, 0, 335.304, 425.309, 0, 377.479, 395.259, 0, 328.173, 398.813, 0, 347.768, 502.233, 0, 394.824, 501.411, 0, 392.954, 479.119, 0, 392.954, 479.119, 0, 345.086, 480.533, 0, 347.768, 502.233, 0, 441.88, 500.589, 0, 440.822, 477.705, 0, 392.954, 479.119, 0, 392.954, 479.119, 0, 394.824, 501.411, 0, 441.88, 500.589, 0, 437.877, 449.328, 0, 389.523, 451.215, 0, 440.822, 477.705, 0, 437.877, 449.328, 0, 341.169, 453.101, 0, 345.086, 480.533, 0, 389.523, 451.215, 0, 341.169, 453.101, 0, 352.384, 517.252, 0, 394.985, 517.267, 0, 395.241, 512.525, 0, 395.241, 512.525, 0, 349.927, 512.83, 0, 352.384, 517.252, 0, 437.585, 517.282, 0, 440.555, 512.22, 0, 395.241, 512.525, 0, 395.241, 512.525, 0, 394.985, 517.267, 0, 437.585, 517.282, 0, 441.88, 500.589, 0, 394.824, 501.411, 0, 440.555, 512.22, 0, 441.88, 500.589, 0, 347.768, 502.233, 0, 349.927, 512.83, 0, 394.824, 501.411, 0, 347.768, 502.233, 0, 360.098, 522.975, 0, 394.737, 522.834, 0, 394.834, 520.442, 0, 394.834, 520.442, 0, 355.961, 520.425, 0, 360.098, 522.975, 0, 429.375, 522.693, 0, 433.707, 520.459, 0, 394.834, 520.442, 0, 394.834, 520.442, 0, 394.737, 522.834, 0, 429.375, 522.693, 0, 437.585, 517.282, 0, 394.985, 517.267, 0, 433.707, 520.459, 0, 437.585, 517.282, 0, 355.961, 520.425, 0, 394.834, 520.442, 0, 394.985, 517.267, 0, 352.384, 517.252, 0, 185.332, 186.28, 0, 204.761, 206.303, 0, 234.697, 167.64, 0, 213.424, 146.739, 0, 264.633, 128.977, 0, 241.515, 107.197, 0, -255.099, -268.612, 0, -294.753, -240.745, 0, -275.229, -217.035, 0, -275.229, -217.035, 0, -239.082, -249.368, 0, -255.099, -268.612, 0, -334.408, -212.878, 0, -311.376, -184.702, 0, -275.229, -217.035, 0, -275.229, -217.035, 0, -294.753, -240.745, 0, -334.408, -212.878, 0, -286.56, -157.158, 0, -254.149, -193.771, 0, -311.376, -184.702, 0, -221.739, -230.385, 0, -239.082, -249.368, 0, -283.912, -310.962, 0, -326.521, -287.944, 0, -311.364, -263.784, 0, -311.364, -263.784, 0, -269.92, -289.154, 0, -283.912, -310.962, 0, -369.129, -264.927, 0, -352.807, -238.413, 0, -311.364, -263.784, 0, -311.364, -263.784, 0, -326.521, -287.944, 0, -369.129, -264.927, 0, -334.408, -212.878, 0, -294.753, -240.745, 0, -352.807, -238.413, 0, -334.408, -212.878, 0, -255.099, -268.612, 0, -269.92, -289.154, 0, -294.753, -240.745, 0, -255.099, -268.612, 0, -309.411, -357.255, 0, -355.546, -343.44, 0, -341.683, -315.018, 0, -341.683, -315.018, 0, -297.439, -333.999, 0, -309.411, -357.255, 0, -401.681, -329.626, 0, -385.927, -296.038, 0, -341.683, -315.018, 0, -341.683, -315.018, 0, -355.546, -343.44, 0, -401.681, -329.626, 0, -369.129, -264.927, 0, -326.521, -287.944, 0, -385.927, -296.038, 0, -369.129, -264.927, 0, -283.912, -310.962, 0, -297.439, -333.999, 0, -326.521, -287.944, 0, -283.912, -310.962, 0, -326.45, -403.262, 0, -375.756, -399.708, 0, -366.804, -371.644, 0, -366.804, -371.644, 0, -318.737, -379.718, 0, -326.45, -403.262, 0, -425.061, -396.154, 0, -414.871, -363.569, 0, -366.804, -371.644, 0, -366.804, -371.644, 0, -375.756, -399.708, 0, -425.061, -396.154, 0, -401.681, -329.626, 0, -355.546, -343.44, 0, -414.871, -363.569, 0, -401.681, -329.626, 0, -309.411, -357.255, 0, -318.737, -379.718, 0, -355.546, -343.44, 0, -309.411, -357.255, 0, -339.446, -457.55, 0, -387.8, -455.663, 0, -382.698, -427.712, 0, -382.698, -427.712, 0, -333.581, -429.758, 0, -339.446, -457.55, 0, -436.154, -453.776, 0, -431.815, -425.666, 0, -382.698, -427.712, 0, -382.698, -427.712, 0, -387.8, -455.663, 0, -436.154, -453.776, 0, -425.061, -396.154, 0, -375.756, -399.708, 0, -431.815, -425.666, 0, -425.061, -396.154, 0, -326.45, -403.262, 0, -333.581, -429.758, 0, -375.756, -399.708, 0, -326.45, -403.262, 0, -346.045, -506.682, 0, -393.101, -505.86, 0, -391.232, -483.568, 0, -391.232, -483.568, 0, -343.363, -484.982, 0, -346.045, -506.682, 0, -440.157, -505.037, 0, -439.1, -482.153, 0, -391.232, -483.568, 0, -391.232, -483.568, 0, -393.101, -505.86, 0, -440.157, -505.037, 0, -436.154, -453.776, 0, -387.8, -455.663, 0, -439.1, -482.153, 0, -436.154, -453.776, 0, -339.446, -457.55, 0, -343.363, -484.982, 0, -387.8, -455.663, 0, -339.446, -457.55, 0, -350.661, -521.701, 0, -393.262, -521.716, 0, -393.518, -516.974, 0, -393.518, -516.974, 0, -348.204, -517.279, 0, -350.661, -521.701, 0, -435.862, -521.731, 0, -438.832, -516.669, 0, -393.518, -516.974, 0, -393.518, -516.974, 0, -393.262, -521.716, 0, -435.862, -521.731, 0, -440.157, -505.037, 0, -393.101, -505.86, 0, -438.832, -516.669, 0, -440.157, -505.037, 0, -346.045, -506.682, 0, -348.204, -517.279, 0, -393.101, -505.86, 0, -346.045, -506.682, 0, -358.375, -527.424, 0, -393.014, -527.283, 0, -393.111, -524.891, 0, -393.111, -524.891, 0, -354.238, -524.874, 0, -358.375, -527.424, 0, -427.653, -527.142, 0, -431.985, -524.908, 0, -393.111, -524.891, 0, -393.111, -524.891, 0, -393.014, -527.283, 0, -427.653, -527.142, 0, -435.862, -521.731, 0, -393.262, -521.716, 0, -431.985, -524.908, 0, -435.862, -521.731, 0, -354.238, -524.874, 0, -393.111, -524.891, 0, -393.262, -521.716, 0, -350.661, -521.701, 0, -183.41, -190.469, 0, -202.939, -210.621, 0, -232.873, -172.071, 0, -211.498, -151.152, 0, -262.807, -133.52, 0, -239.586, -111.835, 0];
const indices = [0, 1, 2, 2, 3, 0, 2, 1, 4, 4, 5, 2, 6, 7, 2, 2, 5, 6, 8, 3, 2, 2, 7, 8, 6, 11, 9, 9, 7, 6, 8, 7, 9, 9, 10, 8, 12, 13, 9, 9, 11, 12, 14, 10, 9, 9, 13, 14, 12, 17, 15, 15, 13, 12, 14, 13, 15, 15, 16, 14, 18, 19, 15, 15, 17, 18, 20, 16, 15, 15, 19, 20, 18, 23, 21, 21, 19, 18, 20, 19, 21, 21, 22, 20, 24, 25, 21, 21, 23, 24, 26, 22, 21, 21, 25, 26, 24, 29, 27, 27, 25, 24, 26, 25, 27, 27, 28, 26, 30, 31, 27, 27, 29, 30, 32, 28, 27, 27, 31, 32, 30, 35, 33, 33, 31, 30, 32, 31, 33, 33, 34, 32, 36, 37, 33, 33, 35, 36, 38, 34, 33, 33, 37, 38, 36, 41, 39, 39, 37, 36, 38, 37, 39, 39, 40, 38, 42, 43, 39, 39, 41, 42, 44, 40, 39, 39, 43, 44, 42, 47, 45, 45, 43, 42, 44, 43, 45, 45, 46, 44, 48, 49, 45, 45, 47, 48, 50, 46, 45, 45, 49, 50, 48, 53, 51, 51, 49, 48, 50, 49, 51, 51, 52, 50, 54, 55, 51, 51, 53, 54, 56, 52, 51, 51, 55, 56, 54, 59, 57, 57, 55, 54, 56, 55, 57, 57, 58, 56, 60, 61, 57, 57, 59, 60, 62, 58, 57, 57, 61, 62, 60, 65, 63, 63, 61, 60, 62, 61, 63, 63, 64, 62, 66, 67, 63, 63, 65, 66, 68, 64, 63, 63, 67, 68, 66, 71, 69, 69, 67, 66, 68, 67, 69, 69, 70, 68, 72, 73, 69, 69, 71, 72, 74, 70, 69, 69, 73, 74, 72, 77, 75, 75, 73, 72, 74, 73, 75, 75, 76, 74, 78, 79, 75, 75, 77, 78, 80, 76, 75, 75, 79, 80, 78, 83, 81, 81, 79, 78, 80, 79, 81, 81, 82, 80, 84, 85, 81, 81, 83, 84, 86, 82, 81, 81, 85, 86, 84, 89, 87, 87, 85, 84, 86, 85, 87, 87, 88, 86, 90, 91, 87, 87, 89, 90, 92, 88, 87, 87, 91, 92, 90, 95, 93, 93, 91, 90, 92, 91, 93, 93, 94, 92, 96, 97, 93, 93, 95, 96, 98, 94, 93, 93, 97, 98, 96, 101, 99, 99, 97, 96, 98, 97, 99, 99, 100, 98, 102, 103, 99, 99, 101, 102, 104, 100, 99, 99, 103, 104, 102, 107, 105, 105, 103, 102, 104, 103, 105, 105, 106, 104, 108, 109, 105, 105, 107, 108, 110, 106, 105, 105, 109, 110, 111, 112, 113, 123, 124, 113, 113, 125, 123, 126, 127, 113, 113, 124, 126, 123, 272, 270, 270, 124, 123, 126, 124, 270, 270, 269, 126, 268, 269, 270, 270, 271, 268, 273, 271, 270, 270, 272, 273, 114, 115, 116, 117, 118, 119, 120, 121, 122, 128, 129, 130, 130, 142, 143, 131, 132, 133, 140, 141, 131, 134, 135, 136, 136, 146, 147, 137, 138, 139, 144, 145, 137, 148, 149, 150, 150, 162, 163, 151, 152, 153, 160, 161, 151, 154, 155, 156, 156, 166, 167, 157, 158, 159, 164, 165, 157, 168, 169, 170, 170, 182, 183, 171, 172, 173, 180, 181, 171, 174, 175, 176, 176, 186, 187, 177, 178, 179, 184, 185, 177, 188, 189, 190, 190, 202, 203, 191, 192, 193, 200, 201, 191, 194, 195, 196, 196, 206, 207, 197, 198, 199, 204, 205, 197, 208, 209, 210, 210, 222, 223, 211, 212, 213, 220, 221, 211, 214, 215, 216, 216, 226, 227, 217, 218, 219, 224, 225, 217, 228, 229, 230, 228, 264, 250, 230, 242, 243, 248, 249, 250, 250, 262, 263, 231, 232, 233, 240, 241, 231, 234, 235, 236, 236, 246, 247, 237, 238, 239, 244, 245, 237, 251, 252, 253, 260, 261, 251, 254, 255, 256, 257, 258, 259, 265, 266, 267, 274, 275, 276, 286, 287, 276, 276, 288, 286, 289, 290, 276, 276, 287, 289, 286, 435, 433, 433, 287, 286, 289, 287, 433, 433, 432, 289, 431, 432, 433, 433, 434, 431, 436, 434, 433, 433, 435, 436, 277, 278, 279, 280, 281, 282, 283, 284, 285, 291, 292, 293, 293, 305, 306, 294, 295, 296, 303, 304, 294, 297, 298, 299, 299, 309, 310, 300, 301, 302, 307, 308, 300, 311, 312, 313, 313, 325, 326, 314, 315, 316, 323, 324, 314, 317, 318, 319, 319, 329, 330, 320, 321, 322, 327, 328, 320, 331, 332, 333, 333, 345, 346, 334, 335, 336, 343, 344, 334, 337, 338, 339, 339, 349, 350, 340, 341, 342, 347, 348, 340, 351, 352, 353, 353, 365, 366, 354, 355, 356, 363, 364, 354, 357, 358, 359, 359, 369, 370, 360, 361, 362, 367, 368, 360, 371, 372, 373, 373, 385, 386, 374, 375, 376, 383, 384, 374, 377, 378, 379, 379, 389, 390, 380, 381, 382, 387, 388, 380, 391, 392, 393, 391, 427, 413, 393, 405, 406, 411, 412, 413, 413, 425, 426, 394, 395, 396, 403, 404, 394, 397, 398, 399, 399, 409, 410, 400, 401, 402, 407, 408, 400, 414, 415, 416, 423, 424, 414, 417, 418, 419, 420, 421, 422, 428, 429, 430];

let geom = new CGL.Geometry(op.name);
let mesh = null;
scale.onChange = () =>
{
    if (mesh)mesh.dispose();
    mesh = null;
};

function build()
{
    let sc = scale.get();
    let vertices = verts.slice(0);

    for (let i = 0; i < vertices.length; i++) vertices[i] = vertices[i] / 1000 * sc;

    geom.vertices = vertices;
    geom.mapTexCoords2d();
    geom.verticesIndices = indices;
    geom.tangents = vertices.map(function (v, i) { return i % 3 == 0 ? 1 : 0; });
    geom.biTangents = vertices.map(function (v, i) { return i % 3 == 1 ? 1 : 0; });
    geom.vertexNormals = vertices.map(function (v, i) { return i % 3 == 2 ? 1 : 0; });
    geomOut.setRef(geom);

    if (!mesh)mesh = op.patch.cg.createMesh(geom, { "opId": op.id });
    else mesh.setGeom(geom);
}

render.onTriggered = function ()
{
    if (!mesh)build();
    if (draw.get()) mesh.render();
    trigger.trigger();
};
